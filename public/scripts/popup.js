(()=>{"use strict";class e{constructor(){this.screens=["welcomeScreen","createWalletScreen","importWalletScreen","walletScreen","sendScreen","receiveScreen"],this.setupToastContainer()}showScreen(e){console.log(`切换到屏幕: ${e}`),this.screens.forEach(e=>{const t=document.getElementById(e);t&&t.classList.add("hidden")});const t=document.getElementById(e);t?t.classList.remove("hidden"):console.error(`找不到屏幕: ${e}`)}updateAccountInfo(e,t){const n=`${e.substring(0,6)}...${e.substring(e.length-4)}`,s=document.getElementById("accountAddressShort");s&&(s.textContent=n);const o=document.getElementById("ethBalance");o&&(o.textContent=`${t} ETH`)}updateReceiveInfo(e){const t=document.getElementById("fullAddress");t&&(t.textContent=e),this.generateQRCode(e)}updateTokenList(e){const t=document.getElementById("tokenList");t&&(t.innerHTML="",0!==e.length?e.forEach(e=>{const n=document.createElement("div");n.className="token-item",n.innerHTML=`\n        <div class="token-info">\n          <div class="token-symbol">${e.symbol}</div>\n          <div class="token-name">${e.name}</div>\n        </div>\n        <div class="token-balance">${e.balance}</div>\n      `,t.appendChild(n)}):t.innerHTML='<div class="empty-message">暂无代币</div>')}showError(e){this.showToast(e,"error")}showSuccess(e){this.showToast(e,"success")}showMessage(e){this.showToast(e,"info")}showMnemonic(e){const t=document.createElement("div");t.className="modal",t.innerHTML=`\n      <div class="modal-content">\n        <h3>请备份您的助记词</h3>\n        <div class="mnemonic-container">${e}</div>\n        <p class="warning">警告：请将助记词保存在安全的地方，任何获得您助记词的人都能控制您的资产。</p>\n        <button id="mnemonicConfirmBtn" class="btn btn-primary">我已安全备份</button>\n      </div>\n    `,document.body.appendChild(t);const n=document.getElementById("mnemonicConfirmBtn");n&&n.addEventListener("click",()=>{document.body.removeChild(t),this.showScreen("walletScreen")})}generateQRCode(e){const t=document.getElementById("addressQRCode");t&&(t.innerHTML=`\n      <div style="width: 200px; height: 200px; background-color: #f0f0f0; display: flex; align-items: center; justify-content: center;">\n        <span>QR Code for:<br>${e.substring(0,10)}...${e.substring(e.length-6)}</span>\n      </div>\n    `)}setupToastContainer(){const e=document.createElement("div");e.id="toast-container",e.className="toast-container",document.body.appendChild(e);const t=document.createElement("style");t.textContent="\n      .toast-container {\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        z-index: 9999;\n      }\n      \n      .toast {\n        padding: 12px 16px;\n        margin-bottom: 10px;\n        border-radius: 4px;\n        color: white;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n        opacity: 0;\n        transform: translateY(-20px);\n        transition: all 0.3s ease;\n      }\n      \n      .toast.show {\n        opacity: 1;\n        transform: translateY(0);\n      }\n      \n      .toast.info {\n        background-color: rgba(79, 70, 229, 0.9) !important;\n      }\n      \n      .toast.success {\n        background-color: rgba(34, 197, 94, 0.9) !important;\n      }\n      \n      .toast.error {\n        background-color: rgba(239, 68, 68, 0.9) !important;\n      }\n      \n      .modal {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(80,80,80,0.95);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 1000;\n      }\n      \n      .modal-content {\n        background-color: white;\n        padding: 20px;\n        border-radius: 8px;\n        width: 80%;\n        max-width: 400px;\n      }\n      \n      .mnemonic-container {\n        background-color: #f5f5f5;\n        padding: 15px;\n        border-radius: 4px;\n        margin: 15px 0;\n        word-break: break-all;\n        font-family: monospace;\n        font-size: 16px;\n      }\n      \n      .warning {\n        color: var(--error-color);\n        font-size: 12px;\n        margin-bottom: 15px;\n      }\n    ",document.head.appendChild(t)}showToast(e,t){const n=document.getElementById("toast-container");if(!n)return;const s=document.createElement("div");s.className=`toast ${t}`,s.textContent=e,n.appendChild(s),setTimeout(()=>{s.classList.add("show")},10),setTimeout(()=>{s.classList.remove("show"),setTimeout(()=>{n.removeChild(s)},300)},3e3)}}class t{constructor(e){this.currentAddress="",this.currentNetwork="1",this.uiManager=e}async initialize(){try{const e=await this.sendMessage({type:"CHECK_WALLET_EXISTS"});e.success?e.exists?(await this.loadAccountInfo(),this.uiManager.showScreen("walletScreen")):this.uiManager.showScreen("welcomeScreen"):this.uiManager.showError("初始化失败: "+e.error)}catch(e){console.error("初始化错误:",e),this.uiManager.showError("初始化失败，请重试")}}async createWallet(e){try{this.uiManager.showMessage("正在创建钱包...");const t=await this.sendMessage({type:"CREATE_WALLET",data:{password:e}});t.success?(this.currentAddress=t.address,this.uiManager.showSuccess("钱包创建成功!"),this.uiManager.showMnemonic(t.mnemonic),await this.loadAccountInfo()):this.uiManager.showError("创建钱包失败: "+t.error)}catch(e){console.error("创建钱包错误:",e),this.uiManager.showError("创建钱包失败，请重试")}}async importWallet(e,t,n){try{this.uiManager.showMessage("正在导入钱包...");const s=await this.sendMessage({type:"IMPORT_WALLET",data:{type:e,value:t,password:n}});s.success?(this.currentAddress=s.address,this.uiManager.showSuccess("钱包导入成功!"),await this.loadAccountInfo(),this.uiManager.showScreen("walletScreen")):this.uiManager.showError("导入钱包失败: "+s.error)}catch(e){console.error("导入钱包错误:",e),this.uiManager.showError("导入钱包失败，请重试")}}async sendTransaction(e,t,n,s){try{if(!e.startsWith("0x")||42!==e.length)return void this.uiManager.showError("无效的接收地址");if(t<=0)return void this.uiManager.showError("金额必须大于0");this.promptForPassword(async o=>{if(!o)return void this.uiManager.showError("需要密码来签名交易");this.uiManager.showMessage("正在发送交易...");const r=await this.sendMessage({type:"SEND_TRANSACTION",data:{to:e,amount:t,gasPrice:n,password:o,asset:s}});r.success?(this.uiManager.showSuccess("交易已发送!"),this.uiManager.showScreen("walletScreen"),setTimeout(()=>this.loadAccountInfo(),1e3)):this.uiManager.showError("发送交易失败: "+r.error)})}catch(e){console.error("发送交易错误:",e),this.uiManager.showError("发送交易失败，请重试")}}async switchNetwork(e){try{if(this.currentNetwork===e)return;this.uiManager.showMessage("正在切换网络...");const t=await this.sendMessage({type:"SWITCH_NETWORK",data:{networkId:e}});t.success?(this.currentNetwork=e,this.uiManager.showSuccess("网络已切换"),await this.loadAccountInfo()):this.uiManager.showError("切换网络失败: "+t.error)}catch(e){console.error("切换网络错误:",e),this.uiManager.showError("切换网络失败，请重试")}}async showReceiveInfo(){this.currentAddress||await this.loadAccountInfo(),this.uiManager.updateReceiveInfo(this.currentAddress)}async loadAccountInfo(){try{const e=await this.sendMessage({type:"GET_ACCOUNT_INFO"});if(e.success){this.currentAddress=e.address,this.currentNetwork=e.networkId,this.uiManager.updateAccountInfo(e.address,e.balance),this.uiManager.updateTokenList(e.tokens||[]);const t=document.getElementById("networkSelect");t&&(t.value=this.currentNetwork)}else console.error("获取账户信息失败:",e.error)}catch(e){console.error("加载账户信息错误:",e)}}promptForPassword(e){const t=document.createElement("div");t.className="modal",t.innerHTML='\n      <div class="modal-content">\n        <h3>请输入密码</h3>\n        <div class="form-group">\n          <input type="password" id="txPassword" placeholder="钱包密码" />\n        </div>\n        <div class="btn-group">\n          <button id="cancelPasswordBtn" class="btn btn-secondary">取消</button>\n          <button id="confirmPasswordBtn" class="btn btn-primary">确认</button>\n        </div>\n      </div>\n    ',document.body.appendChild(t);const n=document.getElementById("txPassword");n&&setTimeout(()=>n.focus(),100);const s=document.getElementById("cancelPasswordBtn");s&&s.addEventListener("click",()=>{document.body.removeChild(t),e(null)});const o=document.getElementById("confirmPasswordBtn");o&&o.addEventListener("click",()=>{const s=n?n.value:"";document.body.removeChild(t),e(s)}),n&&n.addEventListener("keyup",s=>{if("Enter"===s.key){const s=n.value;document.body.removeChild(t),e(s)}})}sendMessage(e){return new Promise((t,n)=>{try{chrome.runtime.sendMessage(e,e=>{chrome.runtime.lastError?n(chrome.runtime.lastError):t(e)})}catch(e){n(e)}})}}document.addEventListener("DOMContentLoaded",async()=>{console.log("ShieldWallet 弹出窗口已加载");const n=new e,s=new t(n);await s.initialize(),function(e,t){const n=document.getElementById("createWalletBtn"),s=document.getElementById("importWalletBtn"),o=document.getElementById("createWalletForm"),r=document.getElementById("backFromCreateBtn"),a=document.getElementById("importWalletForm"),c=document.getElementById("backFromImportBtn"),d=document.getElementById("importType"),i=document.getElementById("copyAddressBtn"),l=document.getElementById("sendBtn"),m=document.getElementById("receiveBtn"),u=document.getElementById("historyBtn"),h=document.getElementById("addTokenBtn"),g=document.getElementById("sendForm"),w=document.getElementById("backFromSendBtn"),p=document.getElementById("backFromReceiveBtn"),E=document.getElementById("copyFullAddressBtn"),y=document.getElementById("networkSelect");n&&n.addEventListener("click",()=>{e.showScreen("createWalletScreen")}),s&&s.addEventListener("click",()=>{e.showScreen("importWalletScreen")}),o&&o.addEventListener("submit",async n=>{n.preventDefault();const s=document.getElementById("newPassword").value;s===document.getElementById("confirmPassword").value?await t.createWallet(s):e.showError("两次输入的密码不一致")}),r&&r.addEventListener("click",()=>{e.showScreen("welcomeScreen")}),d&&d.addEventListener("change",()=>{const e=document.getElementById("mnemonicInputGroup"),t=document.getElementById("privateKeyInputGroup");"mnemonic"===d.value?(e?.classList.remove("hidden"),t?.classList.add("hidden")):(e?.classList.add("hidden"),t?.classList.remove("hidden"))}),a&&a.addEventListener("submit",async n=>{n.preventDefault();const s=d.value;let o="";o="mnemonic"===s?document.getElementById("mnemonic").value:document.getElementById("privateKey").value;const r=document.getElementById("importPassword").value;r===document.getElementById("importConfirmPassword").value?await t.importWallet(s,o,r):e.showError("两次输入的密码不一致")}),c&&c.addEventListener("click",()=>{e.showScreen("welcomeScreen")}),i&&i.addEventListener("click",()=>{const t=document.getElementById("accountAddressShort")?.textContent;t&&navigator.clipboard.writeText(t).then(()=>e.showMessage("地址已复制到剪贴板")).catch(e=>console.error("复制失败:",e))}),l&&l.addEventListener("click",()=>{e.showScreen("sendScreen")}),m&&m.addEventListener("click",async()=>{e.showScreen("receiveScreen"),await t.showReceiveInfo()}),u&&u.addEventListener("click",()=>{e.showMessage("交易历史功能即将上线")}),g&&g.addEventListener("submit",async e=>{e.preventDefault();const n=document.getElementById("recipientAddress").value,s=document.getElementById("amount").value,o=document.getElementById("gasPrice").value,r=document.getElementById("assetSelect").value;await t.sendTransaction(n,parseFloat(s),parseInt(o),r)}),w&&w.addEventListener("click",()=>{e.showScreen("walletScreen")}),p&&p.addEventListener("click",()=>{e.showScreen("walletScreen")}),E&&E.addEventListener("click",()=>{const t=document.getElementById("fullAddress")?.textContent;t&&navigator.clipboard.writeText(t).then(()=>e.showMessage("地址已复制到剪贴板")).catch(e=>console.error("复制失败:",e))}),y&&y.addEventListener("change",async()=>{const e=y.value;await t.switchNetwork(e)}),h&&h.addEventListener("click",()=>{e.showMessage("添加代币功能即将上线")})}(n,s)})})();